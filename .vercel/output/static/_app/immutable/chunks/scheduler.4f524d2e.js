function x(){}const M=t=>t;function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function v(){return Object.create(null)}function j(t){t.forEach(w)}function A(t){return typeof t=="function"}function B(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function D(t){return Object.keys(t).length===0}function E(t,...n){if(t==null){for(const o of n)o(void 0);return x}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t,n,e){t.$$.on_destroy.push(E(n,e))}function S(t,n,e,o){if(t){const s=y(t,n,e,o);return t[0](s)}}function y(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function U(t,n,e,o){if(t[2]&&o){const s=t[2](o(e));if(n.dirty===void 0)return s;if(typeof s=="object"){const l=[],f=Math.max(n.dirty.length,s.length);for(let u=0;u<f;u+=1)l[u]=n.dirty[u]|s[u];return l}return n.dirty|s}return n.dirty}function C(t,n,e,o,s,l){if(s){const f=y(n,e,o,l);t.p(f,s)}}function G(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function H(t){return t??""}function I(t){const n=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return n?[parseFloat(n[1]),n[2]||"px"]:[t,"px"]}let a;function _(t){a=t}function p(){if(!a)throw new Error("Function called outside component initialization");return a}function J(t){p().$$.on_mount.push(t)}function K(t){p().$$.after_update.push(t)}function L(t){p().$$.on_destroy.push(t)}const i=[],g=[];let c=[];const b=[],m=Promise.resolve();let h=!1;function O(){h||(h=!0,m.then(z))}function N(){return O(),m}function q(t){c.push(t)}const d=new Set;let r=0;function z(){if(r!==0)return;const t=a;do{try{for(;r<i.length;){const n=i[r];r++,_(n),F(n.$$)}}catch(n){throw i.length=0,r=0,n}for(_(null),i.length=0,r=0;g.length;)g.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];d.has(e)||(d.add(e),e())}c.length=0}while(i.length);for(;b.length;)b.pop()();h=!1,d.clear(),_(t)}function F(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function Q(t){const n=[],e=[];c.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),c=n}export{i as A,O as B,K as a,g as b,A as c,k as d,P as e,L as f,H as g,q as h,M as i,S as j,G as k,U as l,I as m,x as n,J as o,v as p,z as q,j as r,B as s,N as t,C as u,D as v,Q as w,a as x,_ as y,w as z};
